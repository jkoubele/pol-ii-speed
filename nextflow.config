params {
    outdir = "./results"
    container_tools = "jkoubele/pol-ii-speed-tools:0.2.0"
    container_python = "jkoubele/pol-ii-speed-python:0.1.1"
    container_r = "jkoubele/pol-ii-speed-r:0.1.0"
}

workDir = params.workDir

docker {
    enabled = true
    runOptions = "-u \$(id -u):\$(id -g)"
}


profiles {
  local {
    process.executor = 'local'
  }

  slurm {
    process.executor = 'slurm'
    clusterOptions = "--output ./slurm_logs/%x/%j_%x.log  --error=./slurm_logs/%x/%j_%x.err"
  }
}

process {

    withName: FastQC {
        container = "quay.io/biocontainers/fastqc:0.12.1--hdfd78af_0"
        cpus = 2
        memory = '4 GB'
    }

    withName: MultiQC {
        container = "multiqc/multiqc:v1.30"
        cpus = 4
        memory = '8 GB'
    }

    withName: ExtractIntronsFromGTF {
        container = params.container_python
        cpus = 1
        memory = '6 GB'
    }

    withName: GetGeneIDsFromGTF {
        container = params.container_r
        cpus = 1
        memory = '6 GB'
    }

    withName: BuildStarIndex {
        container = params.container_tools
        cpus = 16
        memory = '200 GB'
    }

    withName: BuildSalmonIndex {
        container = params.container_tools
        cpus = 16
        memory = '200 GB'
    }

    withName: PrepareTx2Gene {
        container = params.container_r
        cpus = 2
        memory = '8 GB'
    }

    withName: CreateGenomeFastaIndex {
        container = params.container_tools
        cpus = 1
        memory = '4 GB'
    }

    withName: STARAlign {
        container = params.container_tools
        cpus = 12
        memory = '120 GB'
    }

    withName: ExtractIntronicReads {
        container = params.container_python
        cpus = 4
        memory = '10 GB'
    }

    withName: RemoveIntronicReadsFromFASTQ{
        container = params.container_python
        cpus = 4
        memory = '12 GB'
    }

    withName: SalmonQuantification {
        container = params.container_tools
        cpus = 8
        memory = '20 GB'
    }

    withName: ComputeCoverage {
        container = params.container_tools
        cpus = 2
        memory = '8 GB'
    }

    withName: RescaleCoverage{
        container = params.container_r
        cpus = 2
        memory = '16 GB'
    }

    withName: AggregateReadCounts{
        container = params.container_r
        cpus = 2
        memory = '16 GB'
    }

    withName: CreateDesignMatrix{
        container = params.container_r
        cpus = 1
        memory = '6 GB'
    }

    withName: SplitGeneNames{
        container = params.container_r
        cpus = 1
        memory = '6 GB'
    }

    withName: RunModel{
        container = params.container_python
        cpus = 4
        memory = '20 GB'
        env.OMP_NUM_THREADS = { task.cpus.toString() }
        env.MKL_NUM_THREADS = { task.cpus.toString() }
        env.NUMEXPR_NUM_THREADS = { task.cpus.toString() }
        env.OPENBLAS_NUM_THREADS = { task.cpus.toString() }

    }

    withName: MergeModelResultChunks{
        container = params.container_r
        cpus = 1
        memory = '8 GB'
    }

}

report {
    enabled = true
    file = 'report.html'
    overwrite = true
}

timeline {
    enabled = true
    file = 'timeline.html'
    overwrite = true
}

trace {
    enabled = true
    file = 'trace.txt'
    overwrite = true
}

dag {
    enabled = true
    file = 'dag.png'
    overwrite = true
}